/*
 * apaleo Identity API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identityclient

import (
	"encoding/json"
)

// CreateInvitationModel struct for CreateInvitationModel
type CreateInvitationModel struct {
	// Email address, used as the login
	Email string `json:"email"`
	// Properties that user has access to. If the user is invited as account admin, this will be ignored.
	Properties *[]string `json:"properties,omitempty"`
	// If set to {true}, user has full access to all properties. Defaults to false.
	IsAccountAdmin *bool `json:"isAccountAdmin,omitempty"`
	// Roles that user has access to. If the user is invited as account admin, this will be ignored.
	Roles *[]string `json:"roles,omitempty"`
	// The role to be assigned to the user. If you specfiy this and 'Roles', the combination of both will be used.  If the user is invited as account admin, this will be ignored.
	Role *string `json:"role,omitempty"`
}

// NewCreateInvitationModel instantiates a new CreateInvitationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInvitationModel(email string) *CreateInvitationModel {
	this := CreateInvitationModel{}
	this.Email = email
	return &this
}

// NewCreateInvitationModelWithDefaults instantiates a new CreateInvitationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInvitationModelWithDefaults() *CreateInvitationModel {
	this := CreateInvitationModel{}
	return &this
}

// GetEmail returns the Email field value
func (o *CreateInvitationModel) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateInvitationModel) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateInvitationModel) SetEmail(v string) {
	o.Email = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *CreateInvitationModel) GetProperties() []string {
	if o == nil || o.Properties == nil {
		var ret []string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInvitationModel) GetPropertiesOk() (*[]string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *CreateInvitationModel) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []string and assigns it to the Properties field.
func (o *CreateInvitationModel) SetProperties(v []string) {
	o.Properties = &v
}

// GetIsAccountAdmin returns the IsAccountAdmin field value if set, zero value otherwise.
func (o *CreateInvitationModel) GetIsAccountAdmin() bool {
	if o == nil || o.IsAccountAdmin == nil {
		var ret bool
		return ret
	}
	return *o.IsAccountAdmin
}

// GetIsAccountAdminOk returns a tuple with the IsAccountAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInvitationModel) GetIsAccountAdminOk() (*bool, bool) {
	if o == nil || o.IsAccountAdmin == nil {
		return nil, false
	}
	return o.IsAccountAdmin, true
}

// HasIsAccountAdmin returns a boolean if a field has been set.
func (o *CreateInvitationModel) HasIsAccountAdmin() bool {
	if o != nil && o.IsAccountAdmin != nil {
		return true
	}

	return false
}

// SetIsAccountAdmin gets a reference to the given bool and assigns it to the IsAccountAdmin field.
func (o *CreateInvitationModel) SetIsAccountAdmin(v bool) {
	o.IsAccountAdmin = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *CreateInvitationModel) GetRoles() []string {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInvitationModel) GetRolesOk() (*[]string, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *CreateInvitationModel) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *CreateInvitationModel) SetRoles(v []string) {
	o.Roles = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *CreateInvitationModel) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInvitationModel) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *CreateInvitationModel) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *CreateInvitationModel) SetRole(v string) {
	o.Role = &v
}

func (o CreateInvitationModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.IsAccountAdmin != nil {
		toSerialize["isAccountAdmin"] = o.IsAccountAdmin
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableCreateInvitationModel struct {
	value *CreateInvitationModel
	isSet bool
}

func (v NullableCreateInvitationModel) Get() *CreateInvitationModel {
	return v.value
}

func (v *NullableCreateInvitationModel) Set(val *CreateInvitationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInvitationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInvitationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInvitationModel(val *CreateInvitationModel) *NullableCreateInvitationModel {
	return &NullableCreateInvitationModel{value: val, isSet: true}
}

func (v NullableCreateInvitationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInvitationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


