/*
 * apaleo Identity API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identityclient

import (
	"encoding/json"
)

// UserItemModel struct for UserItemModel
type UserItemModel struct {
	// Unique user identifier.
	SubjectId string `json:"subjectId"`
	// First name
	FirstName string `json:"firstName"`
	// Last name
	LastName string `json:"lastName"`
	// Email address, used as the login
	Email string `json:"email"`
	// Properties that user has access to
	Properties *[]PropertyRolesItemModel `json:"properties,omitempty"`
	// If set to {false}, the user is disabled for this account and cannot log in
	Enabled bool `json:"enabled"`
	// If set to {true}, user has full access to all properties.
	IsAccountAdmin bool `json:"isAccountAdmin"`
}

// NewUserItemModel instantiates a new UserItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserItemModel(subjectId string, firstName string, lastName string, email string, enabled bool, isAccountAdmin bool) *UserItemModel {
	this := UserItemModel{}
	this.SubjectId = subjectId
	this.FirstName = firstName
	this.LastName = lastName
	this.Email = email
	this.Enabled = enabled
	this.IsAccountAdmin = isAccountAdmin
	return &this
}

// NewUserItemModelWithDefaults instantiates a new UserItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserItemModelWithDefaults() *UserItemModel {
	this := UserItemModel{}
	return &this
}

// GetSubjectId returns the SubjectId field value
func (o *UserItemModel) GetSubjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectId
}

// GetSubjectIdOk returns a tuple with the SubjectId field value
// and a boolean to check if the value has been set.
func (o *UserItemModel) GetSubjectIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubjectId, true
}

// SetSubjectId sets field value
func (o *UserItemModel) SetSubjectId(v string) {
	o.SubjectId = v
}

// GetFirstName returns the FirstName field value
func (o *UserItemModel) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *UserItemModel) GetFirstNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *UserItemModel) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *UserItemModel) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *UserItemModel) GetLastNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *UserItemModel) SetLastName(v string) {
	o.LastName = v
}

// GetEmail returns the Email field value
func (o *UserItemModel) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UserItemModel) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UserItemModel) SetEmail(v string) {
	o.Email = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *UserItemModel) GetProperties() []PropertyRolesItemModel {
	if o == nil || o.Properties == nil {
		var ret []PropertyRolesItemModel
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserItemModel) GetPropertiesOk() (*[]PropertyRolesItemModel, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *UserItemModel) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []PropertyRolesItemModel and assigns it to the Properties field.
func (o *UserItemModel) SetProperties(v []PropertyRolesItemModel) {
	o.Properties = &v
}

// GetEnabled returns the Enabled field value
func (o *UserItemModel) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *UserItemModel) GetEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *UserItemModel) SetEnabled(v bool) {
	o.Enabled = v
}

// GetIsAccountAdmin returns the IsAccountAdmin field value
func (o *UserItemModel) GetIsAccountAdmin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAccountAdmin
}

// GetIsAccountAdminOk returns a tuple with the IsAccountAdmin field value
// and a boolean to check if the value has been set.
func (o *UserItemModel) GetIsAccountAdminOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsAccountAdmin, true
}

// SetIsAccountAdmin sets field value
func (o *UserItemModel) SetIsAccountAdmin(v bool) {
	o.IsAccountAdmin = v
}

func (o UserItemModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subjectId"] = o.SubjectId
	}
	if true {
		toSerialize["firstName"] = o.FirstName
	}
	if true {
		toSerialize["lastName"] = o.LastName
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["isAccountAdmin"] = o.IsAccountAdmin
	}
	return json.Marshal(toSerialize)
}

type NullableUserItemModel struct {
	value *UserItemModel
	isSet bool
}

func (v NullableUserItemModel) Get() *UserItemModel {
	return v.value
}

func (v *NullableUserItemModel) Set(val *UserItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUserItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUserItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserItemModel(val *UserItemModel) *NullableUserItemModel {
	return &NullableUserItemModel{value: val, isSet: true}
}

func (v NullableUserItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


