/*
 * apaleo Identity API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identityclient

import (
	"encoding/json"
)

// MessageItemCollection struct for MessageItemCollection
type MessageItemCollection struct {
	Messages *[]string `json:"messages,omitempty"`
}

// NewMessageItemCollection instantiates a new MessageItemCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageItemCollection() *MessageItemCollection {
	this := MessageItemCollection{}
	return &this
}

// NewMessageItemCollectionWithDefaults instantiates a new MessageItemCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageItemCollectionWithDefaults() *MessageItemCollection {
	this := MessageItemCollection{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *MessageItemCollection) GetMessages() []string {
	if o == nil || o.Messages == nil {
		var ret []string
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageItemCollection) GetMessagesOk() (*[]string, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *MessageItemCollection) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []string and assigns it to the Messages field.
func (o *MessageItemCollection) SetMessages(v []string) {
	o.Messages = &v
}

func (o MessageItemCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	return json.Marshal(toSerialize)
}

type NullableMessageItemCollection struct {
	value *MessageItemCollection
	isSet bool
}

func (v NullableMessageItemCollection) Get() *MessageItemCollection {
	return v.value
}

func (v *NullableMessageItemCollection) Set(val *MessageItemCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageItemCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageItemCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageItemCollection(val *MessageItemCollection) *NullableMessageItemCollection {
	return &NullableMessageItemCollection{value: val, isSet: true}
}

func (v NullableMessageItemCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageItemCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


