/*
 * Integration API
 *
 * The Integration API allows apps to ...
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package integrationclient

import (
	"encoding/json"
)

// CreateUiIntegrationModel struct for CreateUiIntegrationModel
type CreateUiIntegrationModel struct {
	// Code to identify the current integration.                The code can be any string of choosing.                If no code is provided the integration target will be used as code.
	Code *string `json:"code,omitempty"`
	// Label to be displayed as the name of your integration.  For example, this is the text that is displayed on your user's apps list.
	Label string `json:"label"`
	// Different translations for the integration label.  You can provide as many translations as you want.  You should only provide the iso code of the language for example 'en' for english and 'de' for German. No need for the country.  If there is not a translation for a specific language, we will display the value of the Label as default.
	LabelTranslations *map[string]string `json:"labelTranslations,omitempty"`
	IconSource *string `json:"iconSource,omitempty"`
	SourceUrl string `json:"sourceUrl"`
	SourceType string `json:"sourceType"`
	// List of Ids for the properties for which the integration is configured  If the list is empty then the integration is configured for all properties  Remark: Only applicable to non account level integrations
	PropertyIds *[]string `json:"propertyIds,omitempty"`
	// List of Roles for which the integration is configured to be used  If the list is empty then the integration is configured for all roles
	Roles *[]string `json:"roles,omitempty"`
}

// NewCreateUiIntegrationModel instantiates a new CreateUiIntegrationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUiIntegrationModel(label string, sourceUrl string, sourceType string) *CreateUiIntegrationModel {
	this := CreateUiIntegrationModel{}
	this.Label = label
	this.SourceUrl = sourceUrl
	this.SourceType = sourceType
	return &this
}

// NewCreateUiIntegrationModelWithDefaults instantiates a new CreateUiIntegrationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUiIntegrationModelWithDefaults() *CreateUiIntegrationModel {
	this := CreateUiIntegrationModel{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CreateUiIntegrationModel) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUiIntegrationModel) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CreateUiIntegrationModel) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CreateUiIntegrationModel) SetCode(v string) {
	o.Code = &v
}

// GetLabel returns the Label field value
func (o *CreateUiIntegrationModel) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *CreateUiIntegrationModel) GetLabelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *CreateUiIntegrationModel) SetLabel(v string) {
	o.Label = v
}

// GetLabelTranslations returns the LabelTranslations field value if set, zero value otherwise.
func (o *CreateUiIntegrationModel) GetLabelTranslations() map[string]string {
	if o == nil || o.LabelTranslations == nil {
		var ret map[string]string
		return ret
	}
	return *o.LabelTranslations
}

// GetLabelTranslationsOk returns a tuple with the LabelTranslations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUiIntegrationModel) GetLabelTranslationsOk() (*map[string]string, bool) {
	if o == nil || o.LabelTranslations == nil {
		return nil, false
	}
	return o.LabelTranslations, true
}

// HasLabelTranslations returns a boolean if a field has been set.
func (o *CreateUiIntegrationModel) HasLabelTranslations() bool {
	if o != nil && o.LabelTranslations != nil {
		return true
	}

	return false
}

// SetLabelTranslations gets a reference to the given map[string]string and assigns it to the LabelTranslations field.
func (o *CreateUiIntegrationModel) SetLabelTranslations(v map[string]string) {
	o.LabelTranslations = &v
}

// GetIconSource returns the IconSource field value if set, zero value otherwise.
func (o *CreateUiIntegrationModel) GetIconSource() string {
	if o == nil || o.IconSource == nil {
		var ret string
		return ret
	}
	return *o.IconSource
}

// GetIconSourceOk returns a tuple with the IconSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUiIntegrationModel) GetIconSourceOk() (*string, bool) {
	if o == nil || o.IconSource == nil {
		return nil, false
	}
	return o.IconSource, true
}

// HasIconSource returns a boolean if a field has been set.
func (o *CreateUiIntegrationModel) HasIconSource() bool {
	if o != nil && o.IconSource != nil {
		return true
	}

	return false
}

// SetIconSource gets a reference to the given string and assigns it to the IconSource field.
func (o *CreateUiIntegrationModel) SetIconSource(v string) {
	o.IconSource = &v
}

// GetSourceUrl returns the SourceUrl field value
func (o *CreateUiIntegrationModel) GetSourceUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value
// and a boolean to check if the value has been set.
func (o *CreateUiIntegrationModel) GetSourceUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceUrl, true
}

// SetSourceUrl sets field value
func (o *CreateUiIntegrationModel) SetSourceUrl(v string) {
	o.SourceUrl = v
}

// GetSourceType returns the SourceType field value
func (o *CreateUiIntegrationModel) GetSourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value
// and a boolean to check if the value has been set.
func (o *CreateUiIntegrationModel) GetSourceTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceType, true
}

// SetSourceType sets field value
func (o *CreateUiIntegrationModel) SetSourceType(v string) {
	o.SourceType = v
}

// GetPropertyIds returns the PropertyIds field value if set, zero value otherwise.
func (o *CreateUiIntegrationModel) GetPropertyIds() []string {
	if o == nil || o.PropertyIds == nil {
		var ret []string
		return ret
	}
	return *o.PropertyIds
}

// GetPropertyIdsOk returns a tuple with the PropertyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUiIntegrationModel) GetPropertyIdsOk() (*[]string, bool) {
	if o == nil || o.PropertyIds == nil {
		return nil, false
	}
	return o.PropertyIds, true
}

// HasPropertyIds returns a boolean if a field has been set.
func (o *CreateUiIntegrationModel) HasPropertyIds() bool {
	if o != nil && o.PropertyIds != nil {
		return true
	}

	return false
}

// SetPropertyIds gets a reference to the given []string and assigns it to the PropertyIds field.
func (o *CreateUiIntegrationModel) SetPropertyIds(v []string) {
	o.PropertyIds = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *CreateUiIntegrationModel) GetRoles() []string {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUiIntegrationModel) GetRolesOk() (*[]string, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *CreateUiIntegrationModel) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *CreateUiIntegrationModel) SetRoles(v []string) {
	o.Roles = &v
}

func (o CreateUiIntegrationModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if o.LabelTranslations != nil {
		toSerialize["labelTranslations"] = o.LabelTranslations
	}
	if o.IconSource != nil {
		toSerialize["iconSource"] = o.IconSource
	}
	if true {
		toSerialize["sourceUrl"] = o.SourceUrl
	}
	if true {
		toSerialize["sourceType"] = o.SourceType
	}
	if o.PropertyIds != nil {
		toSerialize["propertyIds"] = o.PropertyIds
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableCreateUiIntegrationModel struct {
	value *CreateUiIntegrationModel
	isSet bool
}

func (v NullableCreateUiIntegrationModel) Get() *CreateUiIntegrationModel {
	return v.value
}

func (v *NullableCreateUiIntegrationModel) Set(val *CreateUiIntegrationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUiIntegrationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUiIntegrationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUiIntegrationModel(val *CreateUiIntegrationModel) *NullableCreateUiIntegrationModel {
	return &NullableCreateUiIntegrationModel{value: val, isSet: true}
}

func (v NullableCreateUiIntegrationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUiIntegrationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


